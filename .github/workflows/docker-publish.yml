name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_ID_PREFIX: docker.pkg.github.com/${{ github.repository_owner }}

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test-ion-core:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ion-core

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: echo variables
        run: echo $IMAGE_NAME

      - name: Build image
        run: docker build --target ion-core-build -t $IMAGE_NAME .

      - nane: verbose images
        run: docker images

      - name: Run tests
        run: docker run --rm -it $IMAGE_NAME:latest ctest


  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push-ion-core:
    # Ensure test job passes before pushing image.
    needs: test-ion-core

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    env:
      IMAGE_NAME: ion-core

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Config image name
        run: |
          IMAGE_ID=${IMAGE_ID_PREFIX}/${IMAGE_NAME}

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://docker.pkg.github.com -u ${{ github.actor }} --password-stdin


      - name: Build image for build stage
        run: docker build --target ion-core-build -t $IMAGE_ID:$VERSION-build-ubuntu18.04 .

      - name: Push image for build stage
        run: docker push $IMAGE_ID:$VERSION-build-ubuntu18.04


      - name: Build image for runtime stage
        run: docker build --target ion-core-runtime -t $IMAGE_ID:$VERSION-runtime-ubuntu18.04 .

      - name: Push image for runtime stage
        run: docker push $IMAGE_ID:$VERSION-runtime-ubuntu18.04


      - name: Build image for release stage
        run: docker build --target ion-core-release -t $IMAGE_ID:$VERSION-release-ubuntu18.04 .

      - name: Push image for relase stage
        run: docker push $IMAGE_ID:$VERSION-relase-ubuntu18.04
